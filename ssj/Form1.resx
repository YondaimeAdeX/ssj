<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        yUZcNEySqUP/2Q==
</value>
  </data>
</root>